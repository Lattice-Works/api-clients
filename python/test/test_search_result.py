# coding: utf-8

"""
    OpenLattice API

    OpenLattice API  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@openlattice.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openlattice
from openlattice.models.search_result import SearchResult  # noqa: E501
from openlattice.rest import ApiException

class TestSearchResult(unittest.TestCase):
    """SearchResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SearchResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openlattice.models.search_result.SearchResult()  # noqa: E501
        if include_optional :
            return SearchResult(
                num_hits = 56, 
                hits = [
                    openlattice.models.search_result_hits.SearchResult_hits(
                        property_types = [
                            openlattice.models.property_type.PropertyType(
                                title = '0', 
                                id = '0', 
                                type = openlattice.models.full_qualified_name.FullQualifiedName(
                                    name = '0', 
                                    namespace = '0', ), 
                                description = '0', 
                                schemas = [
                                    openlattice.models.full_qualified_name.FullQualifiedName(
                                        name = '0', 
                                        namespace = '0', )
                                    ], 
                                datatype = 'Binary', 
                                pii = True, 
                                multi_valued = True, 
                                analyzer = 'NONE', 
                                enum_values = [
                                    '0'
                                    ], 
                                index_type = 'BTREE', )
                            ], 
                        entity_set = {"entityTypeId":"963b597b-b28d-4f59-b2e6-4d443499e464","id":"843b597b-b28d-4f59-b2e6-4d443499e323","name":"NameOfMyEntitySet","title":"This is the title of the entitySet","contacts":["support@openlattice.com"],"description":"This is a more elaborate description of the entity set."}, )
                    ]
            )
        else :
            return SearchResult(
        )

    def testSearchResult(self):
        """Test SearchResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
