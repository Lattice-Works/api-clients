# coding: utf-8

"""
    OpenLattice API

    OpenLattice API  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@openlattice.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openlattice
from openlattice.models.flight import Flight  # noqa: E501
from openlattice.rest import ApiException

class TestFlight(unittest.TestCase):
    """Flight unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Flight
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openlattice.models.flight.Flight()  # noqa: E501
        if include_optional :
            return Flight(
                name = '0', 
                tags = [
                    '0'
                    ], 
                organization_id = '0', 
                entity_definitions = {
                    'key' : openlattice.models.entity_definition.EntityDefinition(
                        fqn = openlattice.models.full_qualified_name.FullQualifiedName(
                            name = '0', 
                            namespace = '0', ), 
                        entity_set_name = '0', 
                        property_definitions = {
                            'key' : openlattice.models.property_definition.PropertyDefinition(
                                type = openlattice.models.full_qualified_name.FullQualifiedName(
                                    name = '0', 
                                    namespace = '0', ), 
                                column = '0', )
                            }, 
                        update_type = 'Replace', )
                    }, 
                association_definitions = {
                    'key' : openlattice.models.association_definition.AssociationDefinition(
                        fqn = openlattice.models.full_qualified_name.FullQualifiedName(
                            name = '0', 
                            namespace = '0', ), 
                        entity_set_name = '0', 
                        property_definitions = {
                            'key' : openlattice.models.property_definition.PropertyDefinition(
                                type = openlattice.models.full_qualified_name.FullQualifiedName(
                                    name = '0', 
                                    namespace = '0', ), 
                                column = '0', )
                            }, 
                        update_type = 'Replace', 
                        src = '0', 
                        dst = '0', )
                    }
            )
        else :
            return Flight(
        )

    def testFlight(self):
        """Test Flight"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
