/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntitySetCollection model module.
 * @module model/EntitySetCollection
 * @version 0.0.1
 */
class EntitySetCollection {
    /**
     * Constructs a new <code>EntitySetCollection</code>.
     * @alias module:model/EntitySetCollection
     */
    constructor() { 
        
        EntitySetCollection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntitySetCollection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntitySetCollection} obj Optional instance to populate.
     * @return {module:model/EntitySetCollection} The populated <code>EntitySetCollection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntitySetCollection();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('entityTypeCollectionId')) {
                obj['entityTypeCollectionId'] = ApiClient.convertToType(data['entityTypeCollectionId'], 'String');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], {'String': 'String'});
            }
            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = ApiClient.convertToType(data['contacts'], ['String']);
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * An optional UUID for the entity set collection.
 * @member {String} id
 */
EntitySetCollection.prototype['id'] = undefined;

/**
 * The unique name of the entity set collection.
 * @member {String} name
 */
EntitySetCollection.prototype['name'] = undefined;

/**
 * The friendly name for the entity set collection.
 * @member {String} title
 */
EntitySetCollection.prototype['title'] = undefined;

/**
 * A description of the entity set collection.
 * @member {String} description
 */
EntitySetCollection.prototype['description'] = undefined;

/**
 * The id of the entity type collection that this entity set collection maps to.
 * @member {String} entityTypeCollectionId
 */
EntitySetCollection.prototype['entityTypeCollectionId'] = undefined;

/**
 * A mapping from collection template type ids to entity set ids.
 * @member {Object.<String, String>} template
 */
EntitySetCollection.prototype['template'] = undefined;

/**
 * A set of contact methods for the owners of this entity set collection.
 * @member {Array.<String>} contacts
 */
EntitySetCollection.prototype['contacts'] = undefined;

/**
 * The id of the organization that this entity set collection belongs to.
 * @member {String} organizationId
 */
EntitySetCollection.prototype['organizationId'] = undefined;






export default EntitySetCollection;

