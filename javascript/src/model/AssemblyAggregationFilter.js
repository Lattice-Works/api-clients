/**
 * OpenLattice API
 * OpenLattice API
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aggregation from './Aggregation';
import Calculation from './Calculation';
import OrientedPropertyTypeId from './OrientedPropertyTypeId';

/**
 * The AssemblyAggregationFilter model module.
 * @module model/AssemblyAggregationFilter
 * @version 0.0.1
 */
class AssemblyAggregationFilter {
    /**
     * Constructs a new <code>AssemblyAggregationFilter</code>.
     * @alias module:model/AssemblyAggregationFilter
     */
    constructor() { 
        
        AssemblyAggregationFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssemblyAggregationFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssemblyAggregationFilter} obj Optional instance to populate.
     * @return {module:model/AssemblyAggregationFilter} The populated <code>AssemblyAggregationFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssemblyAggregationFilter();

            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('srcEntitySetId')) {
                obj['srcEntitySetId'] = ApiClient.convertToType(data['srcEntitySetId'], 'String');
            }
            if (data.hasOwnProperty('edgeEntitySetId')) {
                obj['edgeEntitySetId'] = ApiClient.convertToType(data['edgeEntitySetId'], 'String');
            }
            if (data.hasOwnProperty('dstEntitySetId')) {
                obj['dstEntitySetId'] = ApiClient.convertToType(data['dstEntitySetId'], 'String');
            }
            if (data.hasOwnProperty('groupings')) {
                obj['groupings'] = ApiClient.convertToType(data['groupings'], [OrientedPropertyTypeId]);
            }
            if (data.hasOwnProperty('aggregations')) {
                obj['aggregations'] = ApiClient.convertToType(data['aggregations'], [Aggregation]);
            }
            if (data.hasOwnProperty('calculations')) {
                obj['calculations'] = ApiClient.convertToType(data['calculations'], [Calculation]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} organizationId
 */
AssemblyAggregationFilter.prototype['organizationId'] = undefined;

/**
 * @member {String} srcEntitySetId
 */
AssemblyAggregationFilter.prototype['srcEntitySetId'] = undefined;

/**
 * @member {String} edgeEntitySetId
 */
AssemblyAggregationFilter.prototype['edgeEntitySetId'] = undefined;

/**
 * @member {String} dstEntitySetId
 */
AssemblyAggregationFilter.prototype['dstEntitySetId'] = undefined;

/**
 * @member {Array.<module:model/OrientedPropertyTypeId>} groupings
 */
AssemblyAggregationFilter.prototype['groupings'] = undefined;

/**
 * @member {Array.<module:model/Aggregation>} aggregations
 */
AssemblyAggregationFilter.prototype['aggregations'] = undefined;

/**
 * @member {Array.<module:model/Calculation>} calculations
 */
AssemblyAggregationFilter.prototype['calculations'] = undefined;






export default AssemblyAggregationFilter;

