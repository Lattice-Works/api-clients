/**
 * OpenLattice API
 * OpenLattice API
 *
 * OpenAPI spec version: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssemblyAggregationFilter from '../model/AssemblyAggregationFilter';
import AssemblyAggregationResult from '../model/AssemblyAggregationResult';

/**
* Analysis service.
* @module api/AnalysisApi
* @version 0.0.1
*/
export default class AnalysisApi {

    /**
    * Constructs a new AnalysisApi. 
    * @alias module:api/AnalysisApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getSimpleAssemblyAggregates operation.
     * @callback module:api/AnalysisApi~getSimpleAssemblyAggregatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssemblyAggregationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a simple aggregation
     * @param {module:model/AssemblyAggregationFilter} assemblyAggregationFilter 
     * @param {module:api/AnalysisApi~getSimpleAssemblyAggregatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssemblyAggregationResult}
     */
    getSimpleAssemblyAggregates(assemblyAggregationFilter, callback) {
      let postBody = assemblyAggregationFilter;
      // verify the required parameter 'assemblyAggregationFilter' is set
      if (assemblyAggregationFilter === undefined || assemblyAggregationFilter === null) {
        throw new Error("Missing the required parameter 'assemblyAggregationFilter' when calling getSimpleAssemblyAggregates");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['http_auth', 'openlattice_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssemblyAggregationResult;
      return this.apiClient.callApi(
        '/datastore/assembly-analysis/simple-aggregation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
