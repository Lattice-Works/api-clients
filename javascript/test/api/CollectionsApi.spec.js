/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenLatticeApi);
  }
}(this, function(expect, OpenLatticeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenLatticeApi.CollectionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CollectionsApi', function() {
    describe('addTypeToEntityTypeCollectionTemplate', function() {
      it('should call addTypeToEntityTypeCollectionTemplate successfully', function(done) {
        //uncomment below and update the code to test addTypeToEntityTypeCollectionTemplate
        //instance.addTypeToEntityTypeCollectionTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEntitySetCollection', function() {
      it('should call createEntitySetCollection successfully', function(done) {
        //uncomment below and update the code to test createEntitySetCollection
        //instance.createEntitySetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEntityTypeCollection', function() {
      it('should call createEntityTypeCollection successfully', function(done) {
        //uncomment below and update the code to test createEntityTypeCollection
        //instance.createEntityTypeCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntitySetCollection', function() {
      it('should call deleteEntitySetCollection successfully', function(done) {
        //uncomment below and update the code to test deleteEntitySetCollection
        //instance.deleteEntitySetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntityTypeCollection', function() {
      it('should call deleteEntityTypeCollection successfully', function(done) {
        //uncomment below and update the code to test deleteEntityTypeCollection
        //instance.deleteEntityTypeCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllEntitySetCollections', function() {
      it('should call getAllEntitySetCollections successfully', function(done) {
        //uncomment below and update the code to test getAllEntitySetCollections
        //instance.getAllEntitySetCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllEntityTypeCollections', function() {
      it('should call getAllEntityTypeCollections successfully', function(done) {
        //uncomment below and update the code to test getAllEntityTypeCollections
        //instance.getAllEntityTypeCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySetCollection', function() {
      it('should call getEntitySetCollection successfully', function(done) {
        //uncomment below and update the code to test getEntitySetCollection
        //instance.getEntitySetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySetCollectionsOfType', function() {
      it('should call getEntitySetCollectionsOfType successfully', function(done) {
        //uncomment below and update the code to test getEntitySetCollectionsOfType
        //instance.getEntitySetCollectionsOfType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityTypeCollection', function() {
      it('should call getEntityTypeCollection successfully', function(done) {
        //uncomment below and update the code to test getEntityTypeCollection
        //instance.getEntityTypeCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeTypeFromEntityTypeCollectionTemplate', function() {
      it('should call removeTypeFromEntityTypeCollectionTemplate successfully', function(done) {
        //uncomment below and update the code to test removeTypeFromEntityTypeCollectionTemplate
        //instance.removeTypeFromEntityTypeCollectionTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntitySetCollectionMetadata', function() {
      it('should call updateEntitySetCollectionMetadata successfully', function(done) {
        //uncomment below and update the code to test updateEntitySetCollectionMetadata
        //instance.updateEntitySetCollectionMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntitySetCollectionTemplate', function() {
      it('should call updateEntitySetCollectionTemplate successfully', function(done) {
        //uncomment below and update the code to test updateEntitySetCollectionTemplate
        //instance.updateEntitySetCollectionTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntityTypeCollectionMetadata', function() {
      it('should call updateEntityTypeCollectionMetadata successfully', function(done) {
        //uncomment below and update the code to test updateEntityTypeCollectionMetadata
        //instance.updateEntityTypeCollectionMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
