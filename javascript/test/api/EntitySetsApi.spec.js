/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenLatticeApi);
  }
}(this, function(expect, OpenLatticeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenLatticeApi.EntitySetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntitySetsApi', function() {
    describe('addEntitySetsToLinkingEntitySet', function() {
      it('should call addEntitySetsToLinkingEntitySet successfully', function(done) {
        //uncomment below and update the code to test addEntitySetsToLinkingEntitySet
        //instance.addEntitySetsToLinkingEntitySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addEntitySetsToLinkingEntitySets', function() {
      it('should call addEntitySetsToLinkingEntitySets successfully', function(done) {
        //uncomment below and update the code to test addEntitySetsToLinkingEntitySets
        //instance.addEntitySetsToLinkingEntitySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEntitySets', function() {
      it('should call createEntitySets successfully', function(done) {
        //uncomment below and update the code to test createEntitySets
        //instance.createEntitySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntitySet', function() {
      it('should call deleteEntitySet successfully', function(done) {
        //uncomment below and update the code to test deleteEntitySet
        //instance.deleteEntitySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllEntitySetPropertyMetadata', function() {
      it('should call getAllEntitySetPropertyMetadata successfully', function(done) {
        //uncomment below and update the code to test getAllEntitySetPropertyMetadata
        //instance.getAllEntitySetPropertyMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllEntitySets', function() {
      it('should call getAllEntitySets successfully', function(done) {
        //uncomment below and update the code to test getAllEntitySets
        //instance.getAllEntitySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySet', function() {
      it('should call getEntitySet successfully', function(done) {
        //uncomment below and update the code to test getEntitySet
        //instance.getEntitySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySetId', function() {
      it('should call getEntitySetId successfully', function(done) {
        //uncomment below and update the code to test getEntitySetId
        //instance.getEntitySetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySetIds', function() {
      it('should call getEntitySetIds successfully', function(done) {
        //uncomment below and update the code to test getEntitySetIds
        //instance.getEntitySetIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitySetPropertyMetadata', function() {
      it('should call getEntitySetPropertyMetadata successfully', function(done) {
        //uncomment below and update the code to test getEntitySetPropertyMetadata
        //instance.getEntitySetPropertyMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPropertyMetadataForEntitySets', function() {
      it('should call getPropertyMetadataForEntitySets successfully', function(done) {
        //uncomment below and update the code to test getPropertyMetadataForEntitySets
        //instance.getPropertyMetadataForEntitySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPropertyTypesForEntitySet', function() {
      it('should call getPropertyTypesForEntitySet successfully', function(done) {
        //uncomment below and update the code to test getPropertyTypesForEntitySet
        //instance.getPropertyTypesForEntitySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeEntitySetsFromLinkingEntitySet', function() {
      it('should call removeEntitySetsFromLinkingEntitySet successfully', function(done) {
        //uncomment below and update the code to test removeEntitySetsFromLinkingEntitySet
        //instance.removeEntitySetsFromLinkingEntitySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeEntitySetsFromLinkingEntitySets', function() {
      it('should call removeEntitySetsFromLinkingEntitySets successfully', function(done) {
        //uncomment below and update the code to test removeEntitySetsFromLinkingEntitySets
        //instance.removeEntitySetsFromLinkingEntitySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntitySetMetaData', function() {
      it('should call updateEntitySetMetaData successfully', function(done) {
        //uncomment below and update the code to test updateEntitySetMetaData
        //instance.updateEntitySetMetaData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntitySetPropertyMetadata', function() {
      it('should call updateEntitySetPropertyMetadata successfully', function(done) {
        //uncomment below and update the code to test updateEntitySetPropertyMetadata
        //instance.updateEntitySetPropertyMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
