/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.FlightPlanParameters;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a data integration, including all fields required to run the integration.
 **/
@ApiModel(description = "Represents a data integration, including all fields required to run the integration.")
public class Integration {
  
  @SerializedName("key")
  private UUID key = null;
  public enum EnvironmentEnum {
     PROD_INTEGRATION,  STAGING_INTEGRATION,  LOCAL, 
  };
  @SerializedName("environment")
  private EnvironmentEnum environment = null;
  @SerializedName("s3Bucket")
  private String s3Bucket = null;
  @SerializedName("contacts")
  private List<String> contacts = null;
  @SerializedName("organizationId")
  private UUID organizationId = null;
  @SerializedName("entitySetId")
  private UUID entitySetId = null;
  @SerializedName("maxConnections")
  private Integer maxConnections = null;
  @SerializedName("callback")
  private List<String> callback = null;
  @SerializedName("flightPlanParameters")
  private Map<String, FlightPlanParameters> flightPlanParameters = null;

  /**
   * a unique ID used for authorizing a call to run an integration
   **/
  @ApiModelProperty(value = "a unique ID used for authorizing a call to run an integration")
  public UUID getKey() {
    return key;
  }
  public void setKey(UUID key) {
    this.key = key;
  }

  /**
   * the retrofit environment (e.g. PROD_INTEGRATION, LOCAL)
   **/
  @ApiModelProperty(value = "the retrofit environment (e.g. PROD_INTEGRATION, LOCAL)")
  public EnvironmentEnum getEnvironment() {
    return environment;
  }
  public void setEnvironment(EnvironmentEnum environment) {
    this.environment = environment;
  }

  /**
   * the url of the s3bucket to be used
   **/
  @ApiModelProperty(value = "the url of the s3bucket to be used")
  public String getS3Bucket() {
    return s3Bucket;
  }
  public void setS3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
  }

  /**
   * the set of email addresses of those responsible for the integration
   **/
  @ApiModelProperty(value = "the set of email addresses of those responsible for the integration")
  public List<String> getContacts() {
    return contacts;
  }
  public void setContacts(List<String> contacts) {
    this.contacts = contacts;
  }

  /**
   * the id of the organization that owns the integration
   **/
  @ApiModelProperty(value = "the id of the organization that owns the integration")
  public UUID getOrganizationId() {
    return organizationId;
  }
  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }

  /**
   * the id of the entity set that stores the logs for this integration
   **/
  @ApiModelProperty(value = "the id of the entity set that stores the logs for this integration")
  public UUID getEntitySetId() {
    return entitySetId;
  }
  public void setEntitySetId(UUID entitySetId) {
    this.entitySetId = entitySetId;
  }

  /**
   * maximum number of connections to postgres allowed for this integration
   **/
  @ApiModelProperty(value = "maximum number of connections to postgres allowed for this integration")
  public Integer getMaxConnections() {
    return maxConnections;
  }
  public void setMaxConnections(Integer maxConnections) {
    this.maxConnections = maxConnections;
  }

  /**
   * urls to receive a POST when integration has completed
   **/
  @ApiModelProperty(value = "urls to receive a POST when integration has completed")
  public List<String> getCallback() {
    return callback;
  }
  public void setCallback(List<String> callback) {
    this.callback = callback;
  }

  /**
   * a map from [Flight] name to [FlightPlanParameters]
   **/
  @ApiModelProperty(value = "a map from [Flight] name to [FlightPlanParameters]")
  public Map<String, FlightPlanParameters> getFlightPlanParameters() {
    return flightPlanParameters;
  }
  public void setFlightPlanParameters(Map<String, FlightPlanParameters> flightPlanParameters) {
    this.flightPlanParameters = flightPlanParameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Integration integration = (Integration) o;
    return (this.key == null ? integration.key == null : this.key.equals(integration.key)) &&
        (this.environment == null ? integration.environment == null : this.environment.equals(integration.environment)) &&
        (this.s3Bucket == null ? integration.s3Bucket == null : this.s3Bucket.equals(integration.s3Bucket)) &&
        (this.contacts == null ? integration.contacts == null : this.contacts.equals(integration.contacts)) &&
        (this.organizationId == null ? integration.organizationId == null : this.organizationId.equals(integration.organizationId)) &&
        (this.entitySetId == null ? integration.entitySetId == null : this.entitySetId.equals(integration.entitySetId)) &&
        (this.maxConnections == null ? integration.maxConnections == null : this.maxConnections.equals(integration.maxConnections)) &&
        (this.callback == null ? integration.callback == null : this.callback.equals(integration.callback)) &&
        (this.flightPlanParameters == null ? integration.flightPlanParameters == null : this.flightPlanParameters.equals(integration.flightPlanParameters));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.key == null ? 0: this.key.hashCode());
    result = 31 * result + (this.environment == null ? 0: this.environment.hashCode());
    result = 31 * result + (this.s3Bucket == null ? 0: this.s3Bucket.hashCode());
    result = 31 * result + (this.contacts == null ? 0: this.contacts.hashCode());
    result = 31 * result + (this.organizationId == null ? 0: this.organizationId.hashCode());
    result = 31 * result + (this.entitySetId == null ? 0: this.entitySetId.hashCode());
    result = 31 * result + (this.maxConnections == null ? 0: this.maxConnections.hashCode());
    result = 31 * result + (this.callback == null ? 0: this.callback.hashCode());
    result = 31 * result + (this.flightPlanParameters == null ? 0: this.flightPlanParameters.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Integration {\n");
    
    sb.append("  key: ").append(key).append("\n");
    sb.append("  environment: ").append(environment).append("\n");
    sb.append("  s3Bucket: ").append(s3Bucket).append("\n");
    sb.append("  contacts: ").append(contacts).append("\n");
    sb.append("  organizationId: ").append(organizationId).append("\n");
    sb.append("  entitySetId: ").append(entitySetId).append("\n");
    sb.append("  maxConnections: ").append(maxConnections).append("\n");
    sb.append("  callback: ").append(callback).append("\n");
    sb.append("  flightPlanParameters: ").append(flightPlanParameters).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
