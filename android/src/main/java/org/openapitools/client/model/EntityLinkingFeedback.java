/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.EntityKeyPair;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class EntityLinkingFeedback {
  
  @SerializedName("entityKeyPair")
  private EntityKeyPair entityKeyPair = null;
  @SerializedName("linked")
  private Boolean linked = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public EntityKeyPair getEntityKeyPair() {
    return entityKeyPair;
  }
  public void setEntityKeyPair(EntityKeyPair entityKeyPair) {
    this.entityKeyPair = entityKeyPair;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getLinked() {
    return linked;
  }
  public void setLinked(Boolean linked) {
    this.linked = linked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityLinkingFeedback entityLinkingFeedback = (EntityLinkingFeedback) o;
    return (this.entityKeyPair == null ? entityLinkingFeedback.entityKeyPair == null : this.entityKeyPair.equals(entityLinkingFeedback.entityKeyPair)) &&
        (this.linked == null ? entityLinkingFeedback.linked == null : this.linked.equals(entityLinkingFeedback.linked));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entityKeyPair == null ? 0: this.entityKeyPair.hashCode());
    result = 31 * result + (this.linked == null ? 0: this.linked.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityLinkingFeedback {\n");
    
    sb.append("  entityKeyPair: ").append(entityKeyPair).append("\n");
    sb.append("  linked: ").append(linked).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
