/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Filter {
  
  @SerializedName("@class")
  private String _class = null;
  @SerializedName("values")
  private List<String> values = null;
  @SerializedName("lowerbound")
  private String lowerbound = null;
  @SerializedName("upperbound")
  private String upperbound = null;
  @SerializedName("lowerboundequal")
  private Boolean lowerboundequal = null;
  @SerializedName("upperboundequal")
  private Boolean upperboundequal = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getClass() {
    return _class;
  }
  public void setClass(String _class) {
    this._class = _class;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getValues() {
    return values;
  }
  public void setValues(List<String> values) {
    this.values = values;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLowerbound() {
    return lowerbound;
  }
  public void setLowerbound(String lowerbound) {
    this.lowerbound = lowerbound;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUpperbound() {
    return upperbound;
  }
  public void setUpperbound(String upperbound) {
    this.upperbound = upperbound;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getLowerboundequal() {
    return lowerboundequal;
  }
  public void setLowerboundequal(Boolean lowerboundequal) {
    this.lowerboundequal = lowerboundequal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getUpperboundequal() {
    return upperboundequal;
  }
  public void setUpperboundequal(Boolean upperboundequal) {
    this.upperboundequal = upperboundequal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Filter filter = (Filter) o;
    return (this._class == null ? filter._class == null : this._class.equals(filter._class)) &&
        (this.values == null ? filter.values == null : this.values.equals(filter.values)) &&
        (this.lowerbound == null ? filter.lowerbound == null : this.lowerbound.equals(filter.lowerbound)) &&
        (this.upperbound == null ? filter.upperbound == null : this.upperbound.equals(filter.upperbound)) &&
        (this.lowerboundequal == null ? filter.lowerboundequal == null : this.lowerboundequal.equals(filter.lowerboundequal)) &&
        (this.upperboundequal == null ? filter.upperboundequal == null : this.upperboundequal.equals(filter.upperboundequal));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this._class == null ? 0: this._class.hashCode());
    result = 31 * result + (this.values == null ? 0: this.values.hashCode());
    result = 31 * result + (this.lowerbound == null ? 0: this.lowerbound.hashCode());
    result = 31 * result + (this.upperbound == null ? 0: this.upperbound.hashCode());
    result = 31 * result + (this.lowerboundequal == null ? 0: this.lowerboundequal.hashCode());
    result = 31 * result + (this.upperboundequal == null ? 0: this.upperboundequal.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Filter {\n");
    
    sb.append("  _class: ").append(_class).append("\n");
    sb.append("  values: ").append(values).append("\n");
    sb.append("  lowerbound: ").append(lowerbound).append("\n");
    sb.append("  upperbound: ").append(upperbound).append("\n");
    sb.append("  lowerboundequal: ").append(lowerboundequal).append("\n");
    sb.append("  upperboundequal: ").append(upperboundequal).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
