/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Map;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Authorization {
  
  @SerializedName("aclKey")
  private List<UUID> aclKey = null;
  @SerializedName("permissions")
  private Map<String, Boolean> permissions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<UUID> getAclKey() {
    return aclKey;
  }
  public void setAclKey(List<UUID> aclKey) {
    this.aclKey = aclKey;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Map<String, Boolean> getPermissions() {
    return permissions;
  }
  public void setPermissions(Map<String, Boolean> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Authorization authorization = (Authorization) o;
    return (this.aclKey == null ? authorization.aclKey == null : this.aclKey.equals(authorization.aclKey)) &&
        (this.permissions == null ? authorization.permissions == null : this.permissions.equals(authorization.permissions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.aclKey == null ? 0: this.aclKey.hashCode());
    result = 31 * result + (this.permissions == null ? 0: this.permissions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Authorization {\n");
    
    sb.append("  aclKey: ").append(aclKey).append("\n");
    sb.append("  permissions: ").append(permissions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
