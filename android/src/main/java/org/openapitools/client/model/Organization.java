/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.UUID;
import org.openapitools.client.model.Principal;
import org.openapitools.client.model.Role;
import org.openapitools.client.model.SmsEntitySetInformation;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Organization {
  
  @SerializedName("id")
  private UUID id = null;
  @SerializedName("principal")
  private Principal principal = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("emails")
  private List<String> emails = null;
  @SerializedName("members")
  private List<Principal> members = null;
  @SerializedName("roles")
  private List<Role> roles = null;
  @SerializedName("apps")
  private List<String> apps = null;
  @SerializedName("smsEntitySetInfo")
  private List<SmsEntitySetInformation> smsEntitySetInfo = null;
  @SerializedName("partitions")
  private List<Integer> partitions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Principal getPrincipal() {
    return principal;
  }
  public void setPrincipal(Principal principal) {
    this.principal = principal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getEmails() {
    return emails;
  }
  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Principal> getMembers() {
    return members;
  }
  public void setMembers(List<Principal> members) {
    this.members = members;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Role> getRoles() {
    return roles;
  }
  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getApps() {
    return apps;
  }
  public void setApps(List<String> apps) {
    this.apps = apps;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SmsEntitySetInformation> getSmsEntitySetInfo() {
    return smsEntitySetInfo;
  }
  public void setSmsEntitySetInfo(List<SmsEntitySetInformation> smsEntitySetInfo) {
    this.smsEntitySetInfo = smsEntitySetInfo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Integer> getPartitions() {
    return partitions;
  }
  public void setPartitions(List<Integer> partitions) {
    this.partitions = partitions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return (this.id == null ? organization.id == null : this.id.equals(organization.id)) &&
        (this.principal == null ? organization.principal == null : this.principal.equals(organization.principal)) &&
        (this.title == null ? organization.title == null : this.title.equals(organization.title)) &&
        (this.description == null ? organization.description == null : this.description.equals(organization.description)) &&
        (this.emails == null ? organization.emails == null : this.emails.equals(organization.emails)) &&
        (this.members == null ? organization.members == null : this.members.equals(organization.members)) &&
        (this.roles == null ? organization.roles == null : this.roles.equals(organization.roles)) &&
        (this.apps == null ? organization.apps == null : this.apps.equals(organization.apps)) &&
        (this.smsEntitySetInfo == null ? organization.smsEntitySetInfo == null : this.smsEntitySetInfo.equals(organization.smsEntitySetInfo)) &&
        (this.partitions == null ? organization.partitions == null : this.partitions.equals(organization.partitions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.principal == null ? 0: this.principal.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.emails == null ? 0: this.emails.hashCode());
    result = 31 * result + (this.members == null ? 0: this.members.hashCode());
    result = 31 * result + (this.roles == null ? 0: this.roles.hashCode());
    result = 31 * result + (this.apps == null ? 0: this.apps.hashCode());
    result = 31 * result + (this.smsEntitySetInfo == null ? 0: this.smsEntitySetInfo.hashCode());
    result = 31 * result + (this.partitions == null ? 0: this.partitions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  principal: ").append(principal).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  emails: ").append(emails).append("\n");
    sb.append("  members: ").append(members).append("\n");
    sb.append("  roles: ").append(roles).append("\n");
    sb.append("  apps: ").append(apps).append("\n");
    sb.append("  smsEntitySetInfo: ").append(smsEntitySetInfo).append("\n");
    sb.append("  partitions: ").append(partitions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
