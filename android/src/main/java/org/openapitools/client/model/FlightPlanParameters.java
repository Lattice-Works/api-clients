/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Map;
import org.openapitools.client.model.Flight;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents the parameters required to create a flight plan (i.e. a Map&lt;Flight, Payload&gt;)
 **/
@ApiModel(description = "Represents the parameters required to create a flight plan (i.e. a Map<Flight, Payload>)")
public class FlightPlanParameters {
  
  @SerializedName("sql")
  private String sql = null;
  @SerializedName("src")
  private Map<String, String> src = null;
  @SerializedName("srcPrimaryKeyColumns")
  private List<String> srcPrimaryKeyColumns = null;
  @SerializedName("path")
  private String path = null;
  @SerializedName("flight")
  private Flight flight = null;

  /**
   * the sql query to be used to pull cleaned data from postgres
   **/
  @ApiModelProperty(value = "the sql query to be used to pull cleaned data from postgres")
  public String getSql() {
    return sql;
  }
  public void setSql(String sql) {
    this.sql = sql;
  }

  /**
   * postgres data source for pulling clean data
   **/
  @ApiModelProperty(value = "postgres data source for pulling clean data")
  public Map<String, String> getSrc() {
    return src;
  }
  public void setSrc(Map<String, String> src) {
    this.src = src;
  }

  /**
   * the columns that are primary keys in the cleaned data
   **/
  @ApiModelProperty(value = "the columns that are primary keys in the cleaned data")
  public List<String> getSrcPrimaryKeyColumns() {
    return srcPrimaryKeyColumns;
  }
  public void setSrcPrimaryKeyColumns(List<String> srcPrimaryKeyColumns) {
    this.srcPrimaryKeyColumns = srcPrimaryKeyColumns;
  }

  /**
   * the path to the flight yaml (i.e. https://raw.githubusercontent.com/pathToFlight.yaml)
   **/
  @ApiModelProperty(value = "the path to the flight yaml (i.e. https://raw.githubusercontent.com/pathToFlight.yaml)")
  public String getPath() {
    return path;
  }
  public void setPath(String path) {
    this.path = path;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Flight getFlight() {
    return flight;
  }
  public void setFlight(Flight flight) {
    this.flight = flight;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightPlanParameters flightPlanParameters = (FlightPlanParameters) o;
    return (this.sql == null ? flightPlanParameters.sql == null : this.sql.equals(flightPlanParameters.sql)) &&
        (this.src == null ? flightPlanParameters.src == null : this.src.equals(flightPlanParameters.src)) &&
        (this.srcPrimaryKeyColumns == null ? flightPlanParameters.srcPrimaryKeyColumns == null : this.srcPrimaryKeyColumns.equals(flightPlanParameters.srcPrimaryKeyColumns)) &&
        (this.path == null ? flightPlanParameters.path == null : this.path.equals(flightPlanParameters.path)) &&
        (this.flight == null ? flightPlanParameters.flight == null : this.flight.equals(flightPlanParameters.flight));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sql == null ? 0: this.sql.hashCode());
    result = 31 * result + (this.src == null ? 0: this.src.hashCode());
    result = 31 * result + (this.srcPrimaryKeyColumns == null ? 0: this.srcPrimaryKeyColumns.hashCode());
    result = 31 * result + (this.path == null ? 0: this.path.hashCode());
    result = 31 * result + (this.flight == null ? 0: this.flight.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightPlanParameters {\n");
    
    sb.append("  sql: ").append(sql).append("\n");
    sb.append("  src: ").append(src).append("\n");
    sb.append("  srcPrimaryKeyColumns: ").append(srcPrimaryKeyColumns).append("\n");
    sb.append("  path: ").append(path).append("\n");
    sb.append("  flight: ").append(flight).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
