/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class EntityDataKey {
  
  @SerializedName("entitySetId")
  private UUID entitySetId = null;
  @SerializedName("entityKeyId")
  private UUID entityKeyId = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getEntitySetId() {
    return entitySetId;
  }
  public void setEntitySetId(UUID entitySetId) {
    this.entitySetId = entitySetId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getEntityKeyId() {
    return entityKeyId;
  }
  public void setEntityKeyId(UUID entityKeyId) {
    this.entityKeyId = entityKeyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityDataKey entityDataKey = (EntityDataKey) o;
    return (this.entitySetId == null ? entityDataKey.entitySetId == null : this.entitySetId.equals(entityDataKey.entitySetId)) &&
        (this.entityKeyId == null ? entityDataKey.entityKeyId == null : this.entityKeyId.equals(entityDataKey.entityKeyId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entitySetId == null ? 0: this.entitySetId.hashCode());
    result = 31 * result + (this.entityKeyId == null ? 0: this.entityKeyId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityDataKey {\n");
    
    sb.append("  entitySetId: ").append(entitySetId).append("\n");
    sb.append("  entityKeyId: ").append(entityKeyId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
