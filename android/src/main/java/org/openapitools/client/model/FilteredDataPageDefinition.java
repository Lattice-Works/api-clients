/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.Filter;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class FilteredDataPageDefinition {
  
  @SerializedName("pageSize")
  private BigDecimal pageSize = null;
  @SerializedName("bookmarkId")
  private UUID bookmarkId = null;
  @SerializedName("propertyTypeId")
  private UUID propertyTypeId = null;
  @SerializedName("filter")
  private Map<String, Filter> filter = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPageSize() {
    return pageSize;
  }
  public void setPageSize(BigDecimal pageSize) {
    this.pageSize = pageSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getBookmarkId() {
    return bookmarkId;
  }
  public void setBookmarkId(UUID bookmarkId) {
    this.bookmarkId = bookmarkId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getPropertyTypeId() {
    return propertyTypeId;
  }
  public void setPropertyTypeId(UUID propertyTypeId) {
    this.propertyTypeId = propertyTypeId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Map<String, Filter> getFilter() {
    return filter;
  }
  public void setFilter(Map<String, Filter> filter) {
    this.filter = filter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilteredDataPageDefinition filteredDataPageDefinition = (FilteredDataPageDefinition) o;
    return (this.pageSize == null ? filteredDataPageDefinition.pageSize == null : this.pageSize.equals(filteredDataPageDefinition.pageSize)) &&
        (this.bookmarkId == null ? filteredDataPageDefinition.bookmarkId == null : this.bookmarkId.equals(filteredDataPageDefinition.bookmarkId)) &&
        (this.propertyTypeId == null ? filteredDataPageDefinition.propertyTypeId == null : this.propertyTypeId.equals(filteredDataPageDefinition.propertyTypeId)) &&
        (this.filter == null ? filteredDataPageDefinition.filter == null : this.filter.equals(filteredDataPageDefinition.filter));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    result = 31 * result + (this.bookmarkId == null ? 0: this.bookmarkId.hashCode());
    result = 31 * result + (this.propertyTypeId == null ? 0: this.propertyTypeId.hashCode());
    result = 31 * result + (this.filter == null ? 0: this.filter.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilteredDataPageDefinition {\n");
    
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("  bookmarkId: ").append(bookmarkId).append("\n");
    sb.append("  propertyTypeId: ").append(propertyTypeId).append("\n");
    sb.append("  filter: ").append(filter).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
