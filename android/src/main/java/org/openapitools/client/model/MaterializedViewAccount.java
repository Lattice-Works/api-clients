/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class MaterializedViewAccount {
  
  @SerializedName("username")
  private String username = null;
  @SerializedName("credential")
  private String credential = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCredential() {
    return credential;
  }
  public void setCredential(String credential) {
    this.credential = credential;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaterializedViewAccount materializedViewAccount = (MaterializedViewAccount) o;
    return (this.username == null ? materializedViewAccount.username == null : this.username.equals(materializedViewAccount.username)) &&
        (this.credential == null ? materializedViewAccount.credential == null : this.credential.equals(materializedViewAccount.credential));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.username == null ? 0: this.username.hashCode());
    result = 31 * result + (this.credential == null ? 0: this.credential.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaterializedViewAccount {\n");
    
    sb.append("  username: ").append(username).append("\n");
    sb.append("  credential: ").append(credential).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
