/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.AssociationType;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.PropertyType;
import org.openapitools.client.model.Schema;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class EDM {
  
  @SerializedName("namespaces")
  private List<String> namespaces = null;
  @SerializedName("schemas")
  private List<Schema> schemas = null;
  @SerializedName("propertyTypes")
  private List<PropertyType> propertyTypes = null;
  @SerializedName("entityTypes")
  private List<EntityType> entityTypes = null;
  @SerializedName("associationTypes")
  private List<AssociationType> associationTypes = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getNamespaces() {
    return namespaces;
  }
  public void setNamespaces(List<String> namespaces) {
    this.namespaces = namespaces;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Schema> getSchemas() {
    return schemas;
  }
  public void setSchemas(List<Schema> schemas) {
    this.schemas = schemas;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PropertyType> getPropertyTypes() {
    return propertyTypes;
  }
  public void setPropertyTypes(List<PropertyType> propertyTypes) {
    this.propertyTypes = propertyTypes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<EntityType> getEntityTypes() {
    return entityTypes;
  }
  public void setEntityTypes(List<EntityType> entityTypes) {
    this.entityTypes = entityTypes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<AssociationType> getAssociationTypes() {
    return associationTypes;
  }
  public void setAssociationTypes(List<AssociationType> associationTypes) {
    this.associationTypes = associationTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDM EDM = (EDM) o;
    return (this.namespaces == null ? EDM.namespaces == null : this.namespaces.equals(EDM.namespaces)) &&
        (this.schemas == null ? EDM.schemas == null : this.schemas.equals(EDM.schemas)) &&
        (this.propertyTypes == null ? EDM.propertyTypes == null : this.propertyTypes.equals(EDM.propertyTypes)) &&
        (this.entityTypes == null ? EDM.entityTypes == null : this.entityTypes.equals(EDM.entityTypes)) &&
        (this.associationTypes == null ? EDM.associationTypes == null : this.associationTypes.equals(EDM.associationTypes));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.namespaces == null ? 0: this.namespaces.hashCode());
    result = 31 * result + (this.schemas == null ? 0: this.schemas.hashCode());
    result = 31 * result + (this.propertyTypes == null ? 0: this.propertyTypes.hashCode());
    result = 31 * result + (this.entityTypes == null ? 0: this.entityTypes.hashCode());
    result = 31 * result + (this.associationTypes == null ? 0: this.associationTypes.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDM {\n");
    
    sb.append("  namespaces: ").append(namespaces).append("\n");
    sb.append("  schemas: ").append(schemas).append("\n");
    sb.append("  propertyTypes: ").append(propertyTypes).append("\n");
    sb.append("  entityTypes: ").append(entityTypes).append("\n");
    sb.append("  associationTypes: ").append(associationTypes).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
