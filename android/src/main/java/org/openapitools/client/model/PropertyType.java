/**
 * OpenLattice API
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.UUID;
import org.openapitools.client.model.FullQualifiedName;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PropertyType {
  
  @SerializedName("title")
  private String title = null;
  @SerializedName("id")
  private UUID id = null;
  @SerializedName("type")
  private FullQualifiedName type = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("schemas")
  private List<FullQualifiedName> schemas = null;
  public enum DatatypeEnum {
     Binary,  Boolean,  Byte,  SByte,  Date,  DateTimeOffset,  TimeOfDay,  Duration,  Decimal,  Single,  Double,  Guid,  Int16,  Int32,  Int64,  String,  Stream,  Geography,  GeographyPoint,  GeographyLineString,  GeographyPolygon,  GeographyMultiPoint,  GeographyMultiLineString,  GeographyMultiPolygon,  GeographyCollection,  Geometry,  GeometryPoint,  GeometryLineString,  GeometryPolygon,  GeometryMultiPoint,  GeometryMultiLineString,  GeometryMultiPolygon,  GeometryCollection, 
  };
  @SerializedName("datatype")
  private DatatypeEnum datatype = null;
  @SerializedName("pii")
  private Boolean pii = null;
  @SerializedName("multiValued")
  private Boolean multiValued = null;
  public enum AnalyzerEnum {
     NONE,  METAPHONE,  STANDARD,  NOT_ANALYZED, 
  };
  @SerializedName("analyzer")
  private AnalyzerEnum analyzer = null;
  @SerializedName("enumValues")
  private List<String> enumValues = null;
  public enum IndexTypeEnum {
     BTREE,  HASH,  GIN,  NONE, 
  };
  @SerializedName("indexType")
  private IndexTypeEnum indexType = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FullQualifiedName getType() {
    return type;
  }
  public void setType(FullQualifiedName type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<FullQualifiedName> getSchemas() {
    return schemas;
  }
  public void setSchemas(List<FullQualifiedName> schemas) {
    this.schemas = schemas;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DatatypeEnum getDatatype() {
    return datatype;
  }
  public void setDatatype(DatatypeEnum datatype) {
    this.datatype = datatype;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getPii() {
    return pii;
  }
  public void setPii(Boolean pii) {
    this.pii = pii;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getMultiValued() {
    return multiValued;
  }
  public void setMultiValued(Boolean multiValued) {
    this.multiValued = multiValued;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AnalyzerEnum getAnalyzer() {
    return analyzer;
  }
  public void setAnalyzer(AnalyzerEnum analyzer) {
    this.analyzer = analyzer;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getEnumValues() {
    return enumValues;
  }
  public void setEnumValues(List<String> enumValues) {
    this.enumValues = enumValues;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public IndexTypeEnum getIndexType() {
    return indexType;
  }
  public void setIndexType(IndexTypeEnum indexType) {
    this.indexType = indexType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyType propertyType = (PropertyType) o;
    return (this.title == null ? propertyType.title == null : this.title.equals(propertyType.title)) &&
        (this.id == null ? propertyType.id == null : this.id.equals(propertyType.id)) &&
        (this.type == null ? propertyType.type == null : this.type.equals(propertyType.type)) &&
        (this.description == null ? propertyType.description == null : this.description.equals(propertyType.description)) &&
        (this.schemas == null ? propertyType.schemas == null : this.schemas.equals(propertyType.schemas)) &&
        (this.datatype == null ? propertyType.datatype == null : this.datatype.equals(propertyType.datatype)) &&
        (this.pii == null ? propertyType.pii == null : this.pii.equals(propertyType.pii)) &&
        (this.multiValued == null ? propertyType.multiValued == null : this.multiValued.equals(propertyType.multiValued)) &&
        (this.analyzer == null ? propertyType.analyzer == null : this.analyzer.equals(propertyType.analyzer)) &&
        (this.enumValues == null ? propertyType.enumValues == null : this.enumValues.equals(propertyType.enumValues)) &&
        (this.indexType == null ? propertyType.indexType == null : this.indexType.equals(propertyType.indexType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.schemas == null ? 0: this.schemas.hashCode());
    result = 31 * result + (this.datatype == null ? 0: this.datatype.hashCode());
    result = 31 * result + (this.pii == null ? 0: this.pii.hashCode());
    result = 31 * result + (this.multiValued == null ? 0: this.multiValued.hashCode());
    result = 31 * result + (this.analyzer == null ? 0: this.analyzer.hashCode());
    result = 31 * result + (this.enumValues == null ? 0: this.enumValues.hashCode());
    result = 31 * result + (this.indexType == null ? 0: this.indexType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyType {\n");
    
    sb.append("  title: ").append(title).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  schemas: ").append(schemas).append("\n");
    sb.append("  datatype: ").append(datatype).append("\n");
    sb.append("  pii: ").append(pii).append("\n");
    sb.append("  multiValued: ").append(multiValued).append("\n");
    sb.append("  analyzer: ").append(analyzer).append("\n");
    sb.append("  enumValues: ").append(enumValues).append("\n");
    sb.append("  indexType: ").append(indexType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
