/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataGraph {
    #[serde(rename = "entities", skip_serializing_if = "Option::is_none")]
    pub entities: Option<::std::collections::HashMap<String, Vec<::std::collections::HashMap<String, Vec<String>>>>>,
    #[serde(rename = "associations", skip_serializing_if = "Option::is_none")]
    pub associations: Option<::std::collections::HashMap<String, Vec<crate::models::DataAssociation>>>,
}

impl DataGraph {
    pub fn new() -> DataGraph {
        DataGraph {
            entities: None,
            associations: None,
        }
    }
}


