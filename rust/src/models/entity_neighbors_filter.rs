/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EntityNeighborsFilter {
    #[serde(rename = "entityKeyIds", skip_serializing_if = "Option::is_none")]
    pub entity_key_ids: Option<Vec<String>>,
    #[serde(rename = "srcEntitySetIds", skip_serializing_if = "Option::is_none")]
    pub src_entity_set_ids: Option<Vec<String>>,
    #[serde(rename = "dstEntitySetIds", skip_serializing_if = "Option::is_none")]
    pub dst_entity_set_ids: Option<Vec<String>>,
    #[serde(rename = "associationEntitySetIds", skip_serializing_if = "Option::is_none")]
    pub association_entity_set_ids: Option<Vec<String>>,
}

impl EntityNeighborsFilter {
    pub fn new() -> EntityNeighborsFilter {
        EntityNeighborsFilter {
            entity_key_ids: None,
            src_entity_set_ids: None,
            dst_entity_set_ids: None,
            association_entity_set_ids: None,
        }
    }
}


