/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IntegrationResults {
    #[serde(rename = "entityCount", skip_serializing_if = "Option::is_none")]
    pub entity_count: Option<i32>,
    #[serde(rename = "associationCount", skip_serializing_if = "Option::is_none")]
    pub association_count: Option<i32>,
    #[serde(rename = "associationsEntityKeyMappings", skip_serializing_if = "Option::is_none")]
    pub associations_entity_key_mappings: Option<::std::collections::HashMap<String, ::std::collections::HashMap<String, String>>>,
    #[serde(rename = "entitySetsEntityKeyMappings", skip_serializing_if = "Option::is_none")]
    pub entity_sets_entity_key_mappings: Option<::std::collections::HashMap<String, ::std::collections::HashMap<String, String>>>,
}

impl IntegrationResults {
    pub fn new() -> IntegrationResults {
        IntegrationResults {
            entity_count: None,
            association_count: None,
            associations_entity_key_mappings: None,
            entity_sets_entity_key_mappings: None,
        }
    }
}


