/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LinkingFeedback {
    #[serde(rename = "linkingEntity", skip_serializing_if = "Option::is_none")]
    pub linking_entity: Option<crate::models::EntityDataKey>,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<Vec<crate::models::EntityDataKey>>,
    #[serde(rename = "unlink", skip_serializing_if = "Option::is_none")]
    pub unlink: Option<Vec<crate::models::EntityDataKey>>,
}

impl LinkingFeedback {
    pub fn new() -> LinkingFeedback {
        LinkingFeedback {
            linking_entity: None,
            link: None,
            unlink: None,
        }
    }
}


