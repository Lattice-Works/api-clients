/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EdmRequest {
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<Action>,
    #[serde(rename = "propertyTypes", skip_serializing_if = "Option::is_none")]
    pub property_types: Option<Vec<String>>,
    #[serde(rename = "entityTypes", skip_serializing_if = "Option::is_none")]
    pub entity_types: Option<Vec<String>>,
}

impl EdmRequest {
    pub fn new() -> EdmRequest {
        EdmRequest {
            action: None,
            property_types: None,
            entity_types: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "ADD")]
    ADD,
    #[serde(rename = "REMOVE")]
    REMOVE,
    #[serde(rename = "REPLACE")]
    REPLACE,
}

