/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PropertyUsageSummary {
    #[serde(rename = "entityTypeId", skip_serializing_if = "Option::is_none")]
    pub entity_type_id: Option<String>,
    #[serde(rename = "entitySetId", skip_serializing_if = "Option::is_none")]
    pub entity_set_id: Option<String>,
    #[serde(rename = "entitySetName", skip_serializing_if = "Option::is_none")]
    pub entity_set_name: Option<String>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
}

impl PropertyUsageSummary {
    pub fn new() -> PropertyUsageSummary {
        PropertyUsageSummary {
            entity_type_id: None,
            entity_set_id: None,
            entity_set_name: None,
            count: None,
        }
    }
}


