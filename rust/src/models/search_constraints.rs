/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchConstraints {
    #[serde(rename = "entitySetIds", skip_serializing_if = "Option::is_none")]
    pub entity_set_ids: Option<Vec<String>>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i32>,
    #[serde(rename = "maxHits", skip_serializing_if = "Option::is_none")]
    pub max_hits: Option<i32>,
    #[serde(rename = "constraints", skip_serializing_if = "Option::is_none")]
    pub constraints: Option<Vec<crate::models::ConstraintGroup>>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<crate::models::SortDefinition>,
}

impl SearchConstraints {
    pub fn new() -> SearchConstraints {
        SearchConstraints {
            entity_set_ids: None,
            start: None,
            max_hits: None,
            constraints: None,
            sort: None,
        }
    }
}


