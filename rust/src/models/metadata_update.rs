/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetadataUpdate {
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "contacts", skip_serializing_if = "Option::is_none")]
    pub contacts: Option<Vec<String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<crate::models::FullQualifiedName>,
    #[serde(rename = "pii", skip_serializing_if = "Option::is_none")]
    pub pii: Option<bool>,
    #[serde(rename = "defaultShow", skip_serializing_if = "Option::is_none")]
    pub default_show: Option<bool>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "propertyTags", skip_serializing_if = "Option::is_none")]
    pub property_tags: Option<::std::collections::HashMap<String, Vec<String>>>,
    #[serde(rename = "indexType", skip_serializing_if = "Option::is_none")]
    pub index_type: Option<IndexType>,
    #[serde(rename = "organizationId", skip_serializing_if = "Option::is_none")]
    pub organization_id: Option<String>,
    #[serde(rename = "partitions", skip_serializing_if = "Option::is_none")]
    pub partitions: Option<Vec<i32>>,
    #[serde(rename = "enumValues", skip_serializing_if = "Option::is_none")]
    pub enum_values: Option<Vec<String>>,
}

impl MetadataUpdate {
    pub fn new() -> MetadataUpdate {
        MetadataUpdate {
            title: None,
            description: None,
            name: None,
            contacts: None,
            _type: None,
            pii: None,
            default_show: None,
            url: None,
            property_tags: None,
            index_type: None,
            organization_id: None,
            partitions: None,
            enum_values: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IndexType {
    #[serde(rename = "BTREE")]
    BTREE,
    #[serde(rename = "HASH")]
    HASH,
    #[serde(rename = "GIN")]
    GIN,
    #[serde(rename = "NONE")]
    NONE,
}

