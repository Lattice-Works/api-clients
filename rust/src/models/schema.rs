/*
 * OpenLattice API
 *
 * OpenLattice API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@openlattice.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Schema {
    #[serde(rename = "entityTypes", skip_serializing_if = "Option::is_none")]
    pub entity_types: Option<Vec<crate::models::EntityType>>,
    #[serde(rename = "propertyTypes", skip_serializing_if = "Option::is_none")]
    pub property_types: Option<Vec<crate::models::PropertyType>>,
    #[serde(rename = "fqn", skip_serializing_if = "Option::is_none")]
    pub fqn: Option<crate::models::FullQualifiedName>,
}

impl Schema {
    pub fn new() -> Schema {
        Schema {
            entity_types: None,
            property_types: None,
            fqn: None,
        }
    }
}


