=begin
#OpenLattice API

#OpenLattice API

The version of the OpenAPI document: 0.0.1
Contact: support@openlattice.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ShuttleApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ShuttleApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ShuttleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShuttleApi' do
    it 'should create an instance of ShuttleApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ShuttleApi)
    end
  end

  # unit tests for create_integration_definition
  # Creates a new integration definition for running recurring integrations
  # @param integration_name 
  # @param integration 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create_integration_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_integration_definition
  # Replaces any number of fields within an existing integration definition
  # @param integration_name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_integration_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_integration_job_status
  # Deletes an integration job status from the integrationJobs map
  # @param job_id the unique id of the integration job
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_integration_job_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enqueue_integration
  # Enqueues an integration on Shuttle Server for a given integration
  # @param integration_name the name of the integration to be run
  # @param integration_key the unique id used to authenticate an integration run
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'enqueue_integration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for poll_all_integrations
  # Polls the statuses of all running integrations
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, IntegrationJob>]
  describe 'poll_all_integrations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for poll_integration
  # Polls the status of an integration
  # @param job_id the unique id of the integration job
  # @param [Hash] opts the optional parameters
  # @return [IntegrationStatus]
  describe 'poll_integration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_integration_definition
  # Gets an existing integration definition
  # @param integration_name 
  # @param [Hash] opts the optional parameters
  # @return [Integration]
  describe 'read_integration_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_integration_definition
  # Replaces any number of fields within an existing integration definition
  # @param integration_name 
  # @param integration_update 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_integration_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
