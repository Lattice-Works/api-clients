=begin
#OpenLattice API

#OpenLattice API

The version of the OpenAPI document: 0.0.1
Contact: support@openlattice.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PrincipalApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PrincipalApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PrincipalApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PrincipalApi' do
    it 'should create an instance of PrincipalApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PrincipalApi)
    end
  end

  # unit tests for get_all_users
  # Get all users.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Auth0userBasic>]
  describe 'get_all_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_roles
  # Get current roles.
  # @param [Hash] opts the optional parameters
  # @return [Array<SecurablePrincipal>]
  describe 'get_current_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_materialized_view_account
  # Get the db access credentials.
  # @param [Hash] opts the optional parameters
  # @return [MaterializedViewAccount]
  describe 'get_materialized_view_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Get the user for the given id.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [Auth0userBasic]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_all_users
  # Get the user id for the given search.
  # @param search_query 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Auth0userBasic>]
  describe 'search_all_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_all_users_by_email
  # Get the user id for the given email address.
  # @param email_address 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Auth0userBasic>]
  describe 'search_all_users_by_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sync_calling_user
  # Activates a user in the OpenLattice system. This call must be made once before a user will be available for use in authorization policies.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sync_calling_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
