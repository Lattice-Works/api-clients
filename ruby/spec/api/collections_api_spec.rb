=begin
#OpenLattice API

#OpenLattice API

The version of the OpenAPI document: 0.0.1
Contact: support@openlattice.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CollectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CollectionsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CollectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectionsApi' do
    it 'should create an instance of CollectionsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CollectionsApi)
    end
  end

  # unit tests for add_type_to_entity_type_collection_template
  # Appends type to template of the specified EntityTypeCollection
  # @param entity_type_collection_id 
  # @param entity_type_collection 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_type_to_entity_type_collection_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_entity_set_collection
  # Creates a new EntitySetCollection
  # @param entity_set_collection 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create_entity_set_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_entity_type_collection
  # Creates a new EntityTypeCollection
  # @param entity_type_collection 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create_entity_type_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_entity_set_collection
  # Deletes the specified EntitySetCollection
  # @param entity_set_collection_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_entity_set_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_entity_type_collection
  # Deletes the specified EntityTypeCollection
  # @param entity_type_collection_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_entity_type_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_entity_set_collections
  # Returns all EntitySetCollection objects
  # @param [Hash] opts the optional parameters
  # @return [Array<EntitySetCollection>]
  describe 'get_all_entity_set_collections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_entity_type_collections
  # Returns all EntityTypeCollection objects
  # @param [Hash] opts the optional parameters
  # @return [Array<EntityTypeCollection>]
  describe 'get_all_entity_type_collections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_set_collection
  # Returns the EntitySetCollection object for a given id
  # @param entity_set_collection_id 
  # @param [Hash] opts the optional parameters
  # @return [EntitySetCollection]
  describe 'get_entity_set_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_set_collections_of_type
  # Returns all authorized EntitySetCollections for a given EntityTypeCollection id
  # @param entity_set_collection_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<EntitySetCollection>]
  describe 'get_entity_set_collections_of_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_type_collection
  # Returns the EntityTypeCollection object for a given id
  # @param entity_type_collection_id 
  # @param [Hash] opts the optional parameters
  # @return [EntityTypeCollection]
  describe 'get_entity_type_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_type_from_entity_type_collection_template
  # Removes a key from an EntityTypeCollection template
  # @param entity_type_collection_id 
  # @param type_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_type_from_entity_type_collection_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_entity_set_collection_metadata
  # Updates metadata of the specified EntitySetCollection
  # @param entity_set_collection_id 
  # @param metadata_update 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_entity_set_collection_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_entity_set_collection_template
  # Updates template of the specified EntitySetCollection
  # @param entity_set_collection_id 
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_entity_set_collection_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_entity_type_collection_metadata
  # Updates metadata of the specified EntityTypeCollection
  # @param entity_type_collection_id 
  # @param metadata_update 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_entity_type_collection_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
